function calc(method,number,precision){let isString=!1;if("string"!=typeof number&&"number"!=typeof number||"string"!=typeof precision&&"number"!=typeof precision)throw new TypeError("Expected value type is not a Number or String");if("string"==typeof number&&/[a-zA-Z]+/.test(number)||"string"==typeof precision&&/[a-zA-Z]+/.test(precision))throw new TypeError("Expected value contains None-Numbers");if("string"==typeof number&&(isString=!0,number=parseFloat(number)),"string"==typeof precision&&(precision=parseFloat(precision)),!Number.isInteger(precision))throw new TypeError("Expected precision to be an integer");const isRoundingAndNegative="round"===method&&number<0;let exponent;isRoundingAndNegative&&(number=Math.abs(number)),[number,exponent]=`${number}e`.split("e");let result=Math[method](`${number}e${Number(exponent)+precision}`);return[number,exponent]=`${result}e`.split("e"),result=Number(`${number}e${Number(exponent)-precision}`),isRoundingAndNegative&&(result=-result),isString?`${result}`:result}const up=(number,precision)=>calc("round",number,precision),ceil=(number,precision)=>calc("ceil",number,precision),floor=(number,precision)=>calc("floor",number,precision);export const rounding={up:up,ceil:ceil,floor:floor};console.log(rounding.up(2.0413983,6));